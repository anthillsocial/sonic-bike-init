#!/bin/sh
## Finding Song Home embedded system for Kaffe Matthews
## Copyright (C) 2015 Tom Keene
## 
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program. If not, see <http://www.gnu.org/licenses/>.

# Script auto-called via systemd on boot

# The configeration file
CONFIG="/home/sonic/sdcard/config.json"

# Make sure this script is runs as root so network/mount things work
LUID=$(id -u)
if [ $LUID -ne 0 ]; then
    echo "[start] $0 must be run as root"
    exit 1
fi

# Check if we need to mount the SDcard Note: Could be manged by fstab...
if [ -f $CONFIG ]; then
    # File exists
    echo "[start] Found: $CONFIG"
else
    # File doesn't exist so try mounting the sd card
    mount -t vfat -o defaults,rw,umask=0 /dev/mmcblk0p1 /home/sonic/sdcard
fi

# Where should we log startup messages?
LOGFILE=$(grep '"logfile"' /home/sonic/sdcard/config.json | cut -d '"' -f4)

# Which mode should we startup in?
MODE=$(grep '"mode"' $CONFIG | cut -d '"' -f4)
echo "[start] Found mode: $MODE" 

# Make sure we can write to the SDcard
chmod 777 /home/sonic/sdcard -R

# Setup the soundcard. Needs a little time before volume can be set
sleep 1
amixer -c 0 set PCM 100% > /dev/null  # Set initital audio volume to full

# SELECT WHICH MODE TO LOAD: This is set in the config file
if [ X"$MODE" = X"worm" ]; then
    # Move to this dir so relative paths work
    cd /home/sonic/bicrophonic1/src      
    echo "[start] Load worm Player"
    # Load the audio engine
    espeak "release the worms"
    /home/sonic/SonicBikeAudioEngine/bin/SonicBikeAudioEngine & > /dev/null
    sleep 1
    echo "[start] load worm based system"
    ./bicrophonic1 & > /dev/null
    # Release the worms
    #./worms wifi & > /dev/null
    # And finally start up the adhoc wifi
    #./adhoc.sh  & > /dev/null
elif [ X"$MODE" = X"wormrandom" ]; then
    echo "[start] Load Random worm Player"
    espeak "start random worms"
    # Load the audio engine
    /home/sonic/SonicBikeAudioEngine/bin/SonicBikeAudioEngine & > /dev/null
    sleep 1
    # And play a startup sound
    send_osc 12345 /setframerate 30
    send_osc 12345 /load 0 startup.wav
    send_osc 12345 /play 0
    sleep 2
    send_osc 12345 /unload 0
    # release the worms
    ./worms test wifi & > /dev/null
    # And finally start up the adhoc wifi
    ./adhoc.sh  & > /dev/null
elif [ X"$MODE" = X"swamp" ]; then
    cd /home/sonic/sonic-bike-swamp/src
    # Load the old system
    echo "--------------------startup olschool swamp system-----------------------" 
    ./swamp & > /dev/null
    #./swamp_playd  & > /dev/null
    #./bicrophonic1 & > /dev/null
else
    echo "--------------------startup error-----------------------" >> $LOGFILE
    echo "[start] No \"mode\" set. Edit the config and specify 'swamp' OR 'bicrophonic1' OR 'bicrophonicrandom' mode " >> $LOGFILE
    echo "[start error] Nothing has started. Exited. $CONFIG \n" >> $LOGFILE
    echo "[start error] No mode set in '$CONFIG': normal OR random"
fi

